package main

import (
	"fmt"
	"os"
	"path/filepath"
	"strconv"
)

func writeGpgAgentFiles(baseDir string) error {
	// Get the current user's UID
	uid := os.Getuid()
	uidStr := strconv.Itoa(uid)

	// Construct the path to the gnupg directory
	gnupgDir := filepath.Join(baseDir, uidStr, "gnupg")

	// Check if the gnupg directory exists
	if _, err := os.Stat(gnupgDir); os.IsNotExist(err) {
		return fmt.Errorf("gnupg directory %s does not exist", gnupgDir)
	}

	// Walk through all subdirectories within the gnupg directory
	err := filepath.WalkDir(gnupgDir, func(path string, d os.DirEntry, err error) error {
		if err != nil {
			return err
		}

		// Skip files, we only want directories
		if !d.IsDir() {
			return nil
		}

		// Construct the file path for S.gpg-agent
		targetFilePath := filepath.Join(path, "S.gpg-agent")

		// Prepare the file content
		content := fmt.Sprintf("%%Assuan%%\nsocket=/run/user/%s/gnupg/S.gpg-agent\n", uidStr)

		// Write the file
		err = os.WriteFile(targetFilePath, []byte(content), 0644)
		if err != nil {
			return fmt.Errorf("failed to write file %s: %v", targetFilePath, err)
		}

		fmt.Printf("Created file: %s\n", targetFilePath)
		return nil
	})

	if err != nil {
		return fmt.Errorf("error walking gnupg directory: %v", err)
	}

	return nil
}

func main() {
	// Base directory to scan
	baseDir := "/run/user"

	// Call the function
	err := writeGpgAgentFiles(baseDir)
	if err != nil {
		fmt.Printf("Error: %v\n", err)
	} else {
		fmt.Println("All S.gpg-agent files created successfully!")
	}
}
